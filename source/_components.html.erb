<script type="text/ruby">

class CodeMirror < React::Component::Base
  param :code, type: String
  define_state :output_code
  before_mount do
    state.output_code! params.code
  end
  after_mount do
    @editor = `CodeMirror(document.getElementById("code"), {
      value: #{params.code},
      mode: "text/x-ruby",
      matchBrackets: true,
      lineNumbers: true,
      indentUnit: 2,
      theme: 'github'
    });`
    `#{@editor}.on('change', #{lambda {on_change} })`
  end
  render(DIV) do
    div(id: 'code')
    p { state.output_code }
  end

  def on_change
    state.output_code! Opal.compile `#{@editor}.getValue()`
  end

end

class TestApp < React::Component::Base
  param :name
  before_mount { @timer = every(1) { force_update! } }
  render(DIV) do
    h1 {"The current time is #{Time.now}"}
    h2 { "here hello #{params.name}" }.on(:click) do
     alert "you clicked"
    end
  end
end

</script>
